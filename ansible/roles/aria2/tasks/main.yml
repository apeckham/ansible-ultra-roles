- name: Copy aria2.service
  template:
    src: aria2.service
    dest: ~/.config/systemd/user/aria2c.service

- name: Copy aria2.service
  template:
    src: aria2.service
    dest: ~/.config/systemd/user/aria2c.service
  notify:
    - Daemon reload
    - Enable and start aria2c
  vars:
    aria2c_secret: "{{ lookup('password', '/dev/null length=12 chars=ascii_letters,digits') | b64encode }}"

- name: Copy aria2c.conf
  template:
    src: aria2c.conf
    dest: ~/.apps/nginx/proxy.d/aria2c.conf
  notify:
    - Restart nginx

- name: Download AriaNg
  get_url:
    url: "https://github.com/mayswind/AriaNg/releases/download/1.3.7/AriaNg-1.3.7.zip"
    dest: "~/aria2/AriaNg-1.3.7.zip"

- name: Unzip AriaNg
  unarchive:
    src: "~/aria2/AriaNg-1.3.7.zip"
    dest: "~/aria2/www"
    remote_src: yes

- name: Find the AriaNg JS file
  find:
    paths: "~/aria2/www/ariang/js"
    patterns: "aria-ng-*.min.js"
  register: arian_js_files

- name: Set defaults in AriaNg JS file
  replace:
    path: "{{ item.path }}"
    regexp: 'rpcPort:"6800"'
    replace: 'rpcPort:"443"'
  with_items: "{{ arian_js_files.files }}"

- name: Set rpcInterface in AriaNg JS file
  replace:
    path: "{{ item.path }}"
    regexp: 'rpcInterface:""'
    replace: 'rpcInterface:"aria2c/jsonrpc"'
  with_items: "{{ arian_js_files.files }}"

- name: Set secret in AriaNg JS file
  replace:
    path: "{{ item.path }}"
    regexp: 'secret:""'
    replace: 'secret:"{{ aria2c_secret }}"'
  with_items: "{{ arian_js_files.files }}"

- name: Set rpcHost in AriaNg JS file
  replace:
    path: "{{ item.path }}"
    regexp: 'rpcHost:""'
    replace: 'rpcHost:"{{ aria2c_host }}"'
  with_items: "{{ arian_js_files.files }}"

- name: Set protocol in AriaNg JS file
  replace:
    path: "{{ item.path }}"
    regexp: 'protocol:""'
    replace: 'protocol:"https"'
  with_items: "{{ arian_js_files.files }}"

- name: Enable and start aria2c service
  systemd:
    name: aria2c
    enabled: yes
    state: started
    user: yes
- name: Restart nginx
  command: app-nginx restart
  when: ansible_facts['os_family'] == 'Debian'
  become: yes
  become_user: root
- name: Daemon reload
  command: systemctl --user daemon-reload
  become: yes
  become_user: root

- name: Enable and start aria2c
  command: systemctl --user enable --now aria2c
  become: yes
  become_user: root
